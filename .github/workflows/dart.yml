# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: flutter --version
      - name : Run analyze
        run: flutter analyze
      # Uncomment this step to verify the use of 'dart format' on each commit.
#      - name: Verify formatting
#        run: dart format --output=none --set-exit-if-changed .

#      - name: Get dependencies and generate mocks
#        run: |
#            flutter pub get
#            flutter pub run build_runner build
      - name: Generate Lint Report
        run: flutter analyze > lint-report.html

      - name: Upload Lint Report as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: lint-report
          path: lint-report.html


      - name: Run tests
        run: flutter test

      - name: Generate test report
        run: flutter test > test-report.html

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: test-report.html

      - name: Run code coverage test
        run: flutter test --coverage

#      - name: Debug - Print Coverage Reports After Upload
#        run: |
#          ls -l $GITHUB_WORKSPACE/coverage/
#          cat $GITHUB_WORKSPACE/coverage/lcov.info
          
      - name: Install lcov (for genhtml)
        run: sudo apt-get install lcov

      - name: Generate HTML coverage report
        run: |
            lcov --list coverage/lcov.info  # Display coverage information 
            genhtml -o coverage/html coverage/lcov.info   

      - name: Check code coverage threshold
        run: |
          COVERAGE_THRESHOLD=80  # Set your desired coverage threshold
          LCOV_OUTPUT=$(lcov -l coverage/lcov.info)
          echo "Debug: lcov output:"
          echo "$LCOV_OUTPUT"
          
          CURRENT_COVERAGE=$(echo "$LCOV_OUTPUT" | awk '/Total:/ {print $2}' | cut -d'%' -f1)
          
          if [ -z "$CURRENT_COVERAGE" ]; then
            echo "Error: No coverage information found. Workflow failed!"
            exit 1
          fi
          
          if (( $(echo "$CURRENT_COVERAGE < $COVERAGE_THRESHOLD" | bc -l) )); then
            echo "Code coverage is below $COVERAGE_THRESHOLD%. Workflow failed!"
            exit 1
          else
            echo "Code coverage is above $COVERAGE_THRESHOLD%. Workflow passed!"
          fi
      

      - name: Upload HTML Test coverage report as artifact
        uses: actions/upload-artifact@v2
        with:
          name: test-coverage
          path: coverage/html

#      - name: Generate HTML coverage report
#        run: |
#          flutter test --coverage
#          lcov2html -o coverage/index.html coverage/lcov.info
#
#      - name: Upload HTML coverage report as artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: html-coverage
#          path: coverage/index.html

#      - name: Upload coverage to codecov
#        run: curl -s https://codecov.io/bash
#        shell: bash



#      - name: Upload coverage reports to Codecov
#        uses: codecov/codecov-action@v3
#        env:
#          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

